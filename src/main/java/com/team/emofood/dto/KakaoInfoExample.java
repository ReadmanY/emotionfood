package com.team.emofood.dto;

import java.util.ArrayList;
import java.util.List;

public class KakaoInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    public KakaoInfoExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andKidIsNull() {
            addCriterion("kid is null");
            return (Criteria) this;
        }

        public Criteria andKidIsNotNull() {
            addCriterion("kid is not null");
            return (Criteria) this;
        }

        public Criteria andKidEqualTo(Integer value) {
            addCriterion("kid =", value, "kid");
            return (Criteria) this;
        }

        public Criteria andKidNotEqualTo(Integer value) {
            addCriterion("kid <>", value, "kid");
            return (Criteria) this;
        }

        public Criteria andKidGreaterThan(Integer value) {
            addCriterion("kid >", value, "kid");
            return (Criteria) this;
        }

        public Criteria andKidGreaterThanOrEqualTo(Integer value) {
            addCriterion("kid >=", value, "kid");
            return (Criteria) this;
        }

        public Criteria andKidLessThan(Integer value) {
            addCriterion("kid <", value, "kid");
            return (Criteria) this;
        }

        public Criteria andKidLessThanOrEqualTo(Integer value) {
            addCriterion("kid <=", value, "kid");
            return (Criteria) this;
        }

        public Criteria andKidIn(List<Integer> values) {
            addCriterion("kid in", values, "kid");
            return (Criteria) this;
        }

        public Criteria andKidNotIn(List<Integer> values) {
            addCriterion("kid not in", values, "kid");
            return (Criteria) this;
        }

        public Criteria andKidBetween(Integer value1, Integer value2) {
            addCriterion("kid between", value1, value2, "kid");
            return (Criteria) this;
        }

        public Criteria andKidNotBetween(Integer value1, Integer value2) {
            addCriterion("kid not between", value1, value2, "kid");
            return (Criteria) this;
        }

        public Criteria andKrateIsNull() {
            addCriterion("krate is null");
            return (Criteria) this;
        }

        public Criteria andKrateIsNotNull() {
            addCriterion("krate is not null");
            return (Criteria) this;
        }

        public Criteria andKrateEqualTo(Float value) {
            addCriterion("krate =", value, "krate");
            return (Criteria) this;
        }

        public Criteria andKrateNotEqualTo(Float value) {
            addCriterion("krate <>", value, "krate");
            return (Criteria) this;
        }

        public Criteria andKrateGreaterThan(Float value) {
            addCriterion("krate >", value, "krate");
            return (Criteria) this;
        }

        public Criteria andKrateGreaterThanOrEqualTo(Float value) {
            addCriterion("krate >=", value, "krate");
            return (Criteria) this;
        }

        public Criteria andKrateLessThan(Float value) {
            addCriterion("krate <", value, "krate");
            return (Criteria) this;
        }

        public Criteria andKrateLessThanOrEqualTo(Float value) {
            addCriterion("krate <=", value, "krate");
            return (Criteria) this;
        }

        public Criteria andKrateIn(List<Float> values) {
            addCriterion("krate in", values, "krate");
            return (Criteria) this;
        }

        public Criteria andKrateNotIn(List<Float> values) {
            addCriterion("krate not in", values, "krate");
            return (Criteria) this;
        }

        public Criteria andKrateBetween(Float value1, Float value2) {
            addCriterion("krate between", value1, value2, "krate");
            return (Criteria) this;
        }

        public Criteria andKrateNotBetween(Float value1, Float value2) {
            addCriterion("krate not between", value1, value2, "krate");
            return (Criteria) this;
        }

        public Criteria andKcountRateIsNull() {
            addCriterion("kcount_rate is null");
            return (Criteria) this;
        }

        public Criteria andKcountRateIsNotNull() {
            addCriterion("kcount_rate is not null");
            return (Criteria) this;
        }

        public Criteria andKcountRateEqualTo(Integer value) {
            addCriterion("kcount_rate =", value, "kcountRate");
            return (Criteria) this;
        }

        public Criteria andKcountRateNotEqualTo(Integer value) {
            addCriterion("kcount_rate <>", value, "kcountRate");
            return (Criteria) this;
        }

        public Criteria andKcountRateGreaterThan(Integer value) {
            addCriterion("kcount_rate >", value, "kcountRate");
            return (Criteria) this;
        }

        public Criteria andKcountRateGreaterThanOrEqualTo(Integer value) {
            addCriterion("kcount_rate >=", value, "kcountRate");
            return (Criteria) this;
        }

        public Criteria andKcountRateLessThan(Integer value) {
            addCriterion("kcount_rate <", value, "kcountRate");
            return (Criteria) this;
        }

        public Criteria andKcountRateLessThanOrEqualTo(Integer value) {
            addCriterion("kcount_rate <=", value, "kcountRate");
            return (Criteria) this;
        }

        public Criteria andKcountRateIn(List<Integer> values) {
            addCriterion("kcount_rate in", values, "kcountRate");
            return (Criteria) this;
        }

        public Criteria andKcountRateNotIn(List<Integer> values) {
            addCriterion("kcount_rate not in", values, "kcountRate");
            return (Criteria) this;
        }

        public Criteria andKcountRateBetween(Integer value1, Integer value2) {
            addCriterion("kcount_rate between", value1, value2, "kcountRate");
            return (Criteria) this;
        }

        public Criteria andKcountRateNotBetween(Integer value1, Integer value2) {
            addCriterion("kcount_rate not between", value1, value2, "kcountRate");
            return (Criteria) this;
        }

        public Criteria andKcountBlogIsNull() {
            addCriterion("kcount_blog is null");
            return (Criteria) this;
        }

        public Criteria andKcountBlogIsNotNull() {
            addCriterion("kcount_blog is not null");
            return (Criteria) this;
        }

        public Criteria andKcountBlogEqualTo(Integer value) {
            addCriterion("kcount_blog =", value, "kcountBlog");
            return (Criteria) this;
        }

        public Criteria andKcountBlogNotEqualTo(Integer value) {
            addCriterion("kcount_blog <>", value, "kcountBlog");
            return (Criteria) this;
        }

        public Criteria andKcountBlogGreaterThan(Integer value) {
            addCriterion("kcount_blog >", value, "kcountBlog");
            return (Criteria) this;
        }

        public Criteria andKcountBlogGreaterThanOrEqualTo(Integer value) {
            addCriterion("kcount_blog >=", value, "kcountBlog");
            return (Criteria) this;
        }

        public Criteria andKcountBlogLessThan(Integer value) {
            addCriterion("kcount_blog <", value, "kcountBlog");
            return (Criteria) this;
        }

        public Criteria andKcountBlogLessThanOrEqualTo(Integer value) {
            addCriterion("kcount_blog <=", value, "kcountBlog");
            return (Criteria) this;
        }

        public Criteria andKcountBlogIn(List<Integer> values) {
            addCriterion("kcount_blog in", values, "kcountBlog");
            return (Criteria) this;
        }

        public Criteria andKcountBlogNotIn(List<Integer> values) {
            addCriterion("kcount_blog not in", values, "kcountBlog");
            return (Criteria) this;
        }

        public Criteria andKcountBlogBetween(Integer value1, Integer value2) {
            addCriterion("kcount_blog between", value1, value2, "kcountBlog");
            return (Criteria) this;
        }

        public Criteria andKcountBlogNotBetween(Integer value1, Integer value2) {
            addCriterion("kcount_blog not between", value1, value2, "kcountBlog");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table kakao_info
     *
     * @mbg.generated do_not_delete_during_merge Sun Oct 23 17:41:39 KST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table kakao_info
     *
     * @mbg.generated Sun Oct 23 17:41:39 KST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}